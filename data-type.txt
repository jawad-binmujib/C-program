## Data Types in C
    - In C programming, data types define the type of data a variable can hold. 
      Each data type determines the size and memory consumption of the variable, 
      as well as the operations that can be performed on it.

## Primary Categories of Data Types
    Basic Data Types :
        - int   : Stores integers (whole numbers) without decimals.
        - float : Stores floating-point numbers (numbers with decimals).
        - double: Stores large floating-point numbers with double precision.
        - char  : Stores a single character.

    Derived Data Types :
        - Arrays    : Collection of elements of the same type.
        - Pointers  : Stores memory addresses of other variables.
        - Functions : Functions are also considered data types in C.

    Enumeration Data Type 
        - enum : Allows defining a variable that can hold a set of predefined constants.

    Void Data Type 
        - void : Represents no value or type. Used in functions that do not return any value.


## Examples of Basic Data Types

| Data Type  | Size         | Range                                                |
|------------|--------------|------------------------------------------------------|
| char       | 1 byte       | -128 to 127 (signed) / 0 to 255 (unsigned)           |
| int        | 2 or 4 bytes | -32,768 to 32,767 (signed) / 0 to 65,535 (unsigned)  |
| float      | 4 bytes      | ±3.4e−38 to ±3.4e+38                                 |
| double     | 8 bytes      | ±1.7e−308 to ±1.7e+308                               |


## Data Modifiers

C provides modifiers to adjust the range and precision of basic data types:

- short   : Reduces the size of an integer.
- long    : Increases the size of an integer.
- signed  : Allows both negative and positive values.
- unsigned: Allows only non-negative values.

## Examples:

- short int x;      --> Smaller integer.
- unsigned int y;   --> Only positive integers.
- long double z;    --> Higher precision floating-point number.
